LiveData is an observable data holder class. Unlike a regular
observable , LiveData is lifecycle-aware , meaning it respects the
lifecycle of pther app components , such as activities , fragments
or services.This awareness ensures LiveData only updates app component
observers that are in an active lifecycle state.

LiveData considers an observer , which is represented by the Observer
class , to be in an active state if it's lifecycle is in the STARTED
or RESUMED state. LiveData only notifies active state observers
about updates.
U can register an observer paired with an object that implements
LifecycleOwner interface. This relationship allows observer to be
removed when state of the corresponding Lifecycle object changes
to DESTROYED. This is especially useful for activities and fragments
bcoz they can safley observe LiveData objects and not worry about
leaks-activities fragments are instantly unsubscribed when their
lifecycles are destroyed.

Advantages of using LiveData
1. Ensures ur UI matches your state data
2. No memory leaks.
3. No crashes due to stopped activities
If the observer's lifecycle is inactive , such as in the case of
activity in the back stack , then it doesn't receive any LiveData
events.
4. No more manual lifecycle handling
UI compo. just observe relevant data and don't stop/resume observation
5. Always up to date data
If a lifecycle becomes inactive,it receives the latest data upon
becoming active again. e.g an activity that was in the background
receives the latest data right after it returns to foreground.
6. Proper config changes
If an activity / fragment is recreated due to config change , like
device rotation is immediately receives latest available data
7. Sharing resources
u can extend a LiveData object using singleton pattern to wrap sys.
services so that they can be shared in ur app. LiveData objects
connet to system service once, and then any observer that needs the
resource can just watch LiveData object.


